{"version":3,"sources":["reportWebVitals.js","redux/phonebook/types.js","redux/phonebook/reducer.js","redux/rootReducer.js","redux/store.js","redux/phonebook/actions.js","components/Form/index.js","components/Filter/index.js","components/ContactList/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","ADD_CONTACT","REMOVE_CONTACT","FILTER_CONTACT","phonebookState","items","data","filter","contacts","createReducer","state","type","payload","id","combineReducers","rootReducer","phonebook","store","configureStore","reducer","devTools","middleware","getDefaultMiddleware","logger","onAddContact","createAction","onRemoveContact","onChangeFilter","Form","useSelector","dispatch","useDispatch","useState","name","number","contact","setContact","handleInputChange","event","target","value","reset","formSubmitHandler","some","alert","shortid","generate","onSubmit","preventDefault","htmlFor","placeholder","onChange","pattern","title","required","Filter","ContactList","filteredContacts","normalizedFilter","toLowerCase","includes","length","className","map","onClick","handleDeleteContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0d3cb2b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const types = {\n  ADD_CONTACT: \"counter/add_contact\",\n  REMOVE_CONTACT: \"counter/remove_contact\",\n  FILTER_CONTACT: \"counter/filter_contact\",\n};\n\nexport default types;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport data from \"../../data/contacts.json\";\nimport types from \"./types\";\n\nconst phonebookState = { items: [...data], filter: \"\" };\n\nconst contacts = createReducer(phonebookState.items, {\n  [types.ADD_CONTACT]: (state, { type, payload }) => [...state, payload],\n  [types.REMOVE_CONTACT]: (state, { type, payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst filter = createReducer(phonebookState.filter, {\n  [types.FILTER_CONTACT]: (state, { type, payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { combineReducers } from \"redux\";\nimport phonebook from \"./phonebook/reducer\";\n\nconst rootReducer = combineReducers({\n  phonebook,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: true,\n  middleware: [...getDefaultMiddleware(), logger],\n});\n","import types from \"./types\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const onAddContact = createAction(types.ADD_CONTACT);\n\nexport const onRemoveContact = createAction(types.REMOVE_CONTACT);\n\nexport const onChangeFilter = createAction(types.FILTER_CONTACT);\n","import shortid from \"shortid\";\nimport { useState } from \"react\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { onAddContact } from \"../../redux/phonebook/actions\";\n\nconst Form = () => {\n  const contacts = useSelector((state) => state.phonebook.contacts);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formSubmitHandler(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      dispatch(onAddContact({ name, number, id: shortid.generate() }));\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={handleInputChange}\n            name=\"name\"\n            value={contact.name}\n            id=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"number\">\n          <input\n            type=\"tel\"\n            placeholder=\"Number\"\n            onChange={handleInputChange}\n            name=\"number\"\n            value={contact.number}\n            id=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { onChangeFilter } from \"../../redux/phonebook/actions\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.phonebook.filter);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (event) => {\n    return dispatch(onChangeFilter(event.target.value));\n  };\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"search contact\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { onRemoveContact } from \"../../redux/phonebook/actions\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => state.phonebook.contacts);\n  const filter = useSelector((state) => state.phonebook.filter);\n\n  const dispatch = useDispatch();\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const handleDeleteContact = (id) => {\n    return dispatch(onRemoveContact(id));\n  };\n  return (\n    <>\n      {filteredContacts().length ? (\n        <ol className=\"contact-list\">\n          {filteredContacts().map(({ name, number, id }) => {\n            return (\n              <li key={name}>\n                <p className=\"contact-text\">\n                  <span>{name}</span>\n                  <span>{number}</span>\n                </p>\n                <button\n                  className=\"delete-button\"\n                  onClick={() => handleDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ol>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import \"./App.css\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\n// Comp\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}